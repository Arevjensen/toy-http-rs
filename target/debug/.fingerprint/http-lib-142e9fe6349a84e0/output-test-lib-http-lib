{"message":"unused imports: `fs`, `thread`, `time::Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":134,"byte_end":136,"line_start":6,"line_end":6,"column_start":11,"column_end":13,"is_primary":true,"text":[{"text":"use std::{fs, io::prelude::*, thread, time::Duration};","highlight_start":11,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"http-lib/src/lib.rs","byte_start":154,"byte_end":160,"line_start":6,"line_end":6,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"use std::{fs, io::prelude::*, thread, time::Duration};","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"http-lib/src/lib.rs","byte_start":162,"byte_end":176,"line_start":6,"line_end":6,"column_start":39,"column_end":53,"is_primary":true,"text":[{"text":"use std::{fs, io::prelude::*, thread, time::Duration};","highlight_start":39,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":134,"byte_end":138,"line_start":6,"line_end":6,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"use std::{fs, io::prelude::*, thread, time::Duration};","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"http-lib/src/lib.rs","byte_start":152,"byte_end":176,"line_start":6,"line_end":6,"column_start":29,"column_end":53,"is_primary":true,"text":[{"text":"use std::{fs, io::prelude::*, thread, time::Duration};","highlight_start":29,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `fs`, `thread`, `time::Duration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:6:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{fs, io::prelude::*, thread, time::Duration};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `BufReader`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":225,"byte_end":234,"line_start":8,"line_end":8,"column_start":46,"column_end":55,"is_primary":true,"text":[{"text":"use tokio::io::{AsyncReadExt, AsyncWriteExt, BufReader};","highlight_start":46,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":223,"byte_end":234,"line_start":8,"line_end":8,"column_start":44,"column_end":55,"is_primary":true,"text":[{"text":"use tokio::io::{AsyncReadExt, AsyncWriteExt, BufReader};","highlight_start":44,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BufReader`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:8:46\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::io::{AsyncReadExt, AsyncWriteExt, BufReader};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `TcpStream`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":267,"byte_end":276,"line_start":9,"line_end":9,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"use tokio::net::{TcpListener, TcpStream};","highlight_start":31,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":265,"byte_end":276,"line_start":9,"line_end":9,"column_start":29,"column_end":40,"is_primary":true,"text":[{"text":"use tokio::net::{TcpListener, TcpStream};","highlight_start":29,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `TcpStream`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:9:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::net::{TcpListener, TcpStream};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Sender`, `channel`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":303,"byte_end":310,"line_start":10,"line_end":10,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use tokio::sync::mpsc::{channel, Sender};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"http-lib/src/lib.rs","byte_start":312,"byte_end":318,"line_start":10,"line_end":10,"column_start":34,"column_end":40,"is_primary":true,"text":[{"text":"use tokio::sync::mpsc::{channel, Sender};","highlight_start":34,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":279,"byte_end":320,"line_start":10,"line_end":10,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use tokio::sync::mpsc::{channel, Sender};","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Sender`, `channel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:10:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::sync::mpsc::{channel, Sender};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `io::prelude`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":138,"byte_end":149,"line_start":6,"line_end":6,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"use std::{fs, io::prelude::*, thread, time::Duration};","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `io::prelude`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:6:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{fs, io::prelude::*, thread, time::Duration};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `res`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":2233,"byte_end":2236,"line_start":86,"line_end":86,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let res = req.parse(&buffer).unwrap();","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":2233,"byte_end":2236,"line_start":86,"line_end":86,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let res = req.parse(&buffer).unwrap();","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"_res","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `res`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:86:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = req.parse(&buffer).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_res`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"variable `routeHandlers` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":4056,"byte_end":4069,"line_start":153,"line_end":153,"column_start":40,"column_end":53,"is_primary":true,"text":[{"text":"    pub fn mount(mut self, path: &str, routeHandlers: Vec<RouteHandler>) -> Self {","highlight_start":40,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":4056,"byte_end":4069,"line_start":153,"line_end":153,"column_start":40,"column_end":53,"is_primary":true,"text":[{"text":"    pub fn mount(mut self, path: &str, routeHandlers: Vec<RouteHandler>) -> Self {","highlight_start":40,"highlight_end":53}],"label":null,"suggested_replacement":"route_handlers","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `routeHandlers` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:153:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn mount(mut self, path: &str, routeHandlers: Vec<RouteHandler>) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `route_handlers`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `routeHandler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":4170,"byte_end":4182,"line_start":156,"line_end":156,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            for routeHandler in routeHandlers {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":4170,"byte_end":4182,"line_start":156,"line_end":156,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            for routeHandler in routeHandlers {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"route_handler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `routeHandler` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:156:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            for routeHandler in routeHandlers {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `route_handler`\u001b[0m\n\n"}
{"message":"variable `routeHandler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":4367,"byte_end":4379,"line_start":162,"line_end":162,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            for routeHandler in routeHandlers {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"http-lib/src/lib.rs","byte_start":4367,"byte_end":4379,"line_start":162,"line_end":162,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            for routeHandler in routeHandlers {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"route_handler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `routeHandler` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mhttp-lib/src/lib.rs:162:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            for routeHandler in routeHandlers {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `route_handler`\u001b[0m\n\n"}
{"message":"9 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 9 warnings emitted\u001b[0m\n\n"}
